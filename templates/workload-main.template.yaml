AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy AEM on AWS (New VPC) (qs-1r4mk17l6).
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Launch into a new VPC"
    Order: "1"
    OptionalParameters:
      - S3DataBucketName
      - LambdaZipsBucketName
      - InternalRoute53ZoneName
      - InternalRoute53ZoneID
      - InternalCertificateARN
      - ExternalFQDN
      - ExternalRoute53ZoneID
      - ExternalCertificateARN
      - AuthorBackupSnapshotID
      - PublishBackupSnapshotID
      - AlarmNotificationEmail
      - AlarmNotificationHttpsEndpoint
      - EnableCloudfront
      - CloudfrontPriceClass
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC Network configuration
        Parameters:
          - AvailabilityZones
          - VPCCIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
      - Label:
          default: Bastion Host configuration
        Parameters:
          - BastionInstanceType
          - BastionAMIOS
          - RemoteAccessCIDR
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - KeyPairName
          - BaseAmiImageName
          - AuthorInstanceType
          - PublishInstanceType
          - AuthorDispatcherInstanceType
          - PublishDispatcherInstanceType
          - OrchestratorInstanceType
      - Label:
          default: AEM OpenCloud configuration
        Parameters:
          - S3DataBucketName
          - S3InstallBucketName
          - S3InstallKeyPrefix
          - AOCStackPrefix
          - AemVersion
          - AemDispatcherVersion
          - JavaJDKVersion
          - LambdaZipsBucketName
      - Label:
          default: (optional) AEM OpenCloud Certificate configuration
        Parameters:
          - InternalRoute53ZoneName
          - InternalRoute53ZoneID
          - InternalCertificateARN
          - ExternalFQDN
          - ExternalRoute53ZoneID
          - ExternalCertificateARN
      - Label:
          default: (optional) Advanced AEM OpenCloud configuration
        Parameters:
          - AuthorBackupSnapshotID
          - PublishBackupSnapshotID
          - AlarmNotificationEmail
          - AlarmNotificationHttpsEndpoint
      - Label:
          default: (optional) AWS Cloudfront configuration
        Parameters:
          - EnableCloudfront
          - CloudfrontPriceClass
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      VPCCIDR:
        default: VPC CIDR
      PrivateSubnet1CIDR:
        default: Private Subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private Subnet 2 CIDR
      PublicSubnet1CIDR:
        default: Public Subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public Subnet 2 CIDR
      BastionAMIOS:
        default: Bastion AMI Operating System
      BastionInstanceType:
        default: Bastion Instance Type
      RemoteAccessCIDR:
        default: Allowed Bastion external access CIDR
      KeyPairName:
        default: EC2 instance KeyPair name
      BaseAmiImageName:
        default: Base AMI SSM Name
      AuthorInstanceType:
        default: Author instance type
      PublishInstanceType:
        default: Publish instance type
      AuthorDispatcherInstanceType:
        default: Author-Dispatcher instance type
      PublishDispatcherInstanceType:
        default: Publish-Dispatcher instance type
      OrchestratorInstanceType:
        default: Orchestrator instance type
      S3DataBucketName:
        default: AEM OpenCloud S3 Data bucket
      S3InstallBucketName:
        default: AEM OpenCloud S3 Installation Bucket
      S3InstallKeyPrefix:
        default: AEM OpenCloud S3 installation Key Prefix
      AOCStackPrefix:
        default: AEM OpenCloud Stack Prefix
      AemVersion:
        default: AEM Version to install
      AemDispatcherVersion:
        default: AEM Dispatcher version to install
      JavaJDKVersion:
        default: Java JDK version to install
      LambdaZipsBucketName:
        default: Lambda S3 bucket name
      InternalRoute53ZoneName:
        default: Internal Route53 Zone name
      InternalRoute53ZoneID:
        default: Internal Route53 Zone Id
      InternalCertificateARN:
        default: Internal ACM Certificate ARN
      ExternalFQDN:
        default: External FQDN
      ExternalRoute53ZoneID:
        default: External Route53 Zone Id
      ExternalCertificateARN:
        default: External Certificate ARN
      AuthorBackupSnapshotID:
        default: Author Backup EC2 Snapshot id
      PublishBackupSnapshotID:
        default: Publish Backup EC2 Snapshot id
      AlarmNotificationEmail:
        default: Alarm notification E-Mail address
      AlarmNotificationHttpsEndpoint:
        default: Alarm notification HTTPS endpoint
      EnableCloudfront:
        default: Enable Cloudfront Stack
      CloudfrontPriceClass:
        default: CloudFront PriceClass
      QSS3BucketName:
        default: Quick Start S3 Bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
Parameters:
  AvailabilityZones:
    Description: List of Availability Zones to use for the subnets in the VPC. Only
      two Availability Zones are used for this deployment, and the logical order of
      your selections is preserved.
    Type: List<AWS::EC2::AvailabilityZone::Name>
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[0-2][0-9]|[0-3][0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/1-29
    Default: 10.2.16.0/21
    Description: CIDR block for the VPC
    Type: String
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.2.16.0/24
    Description: CIDR block for private subnet 1 located in Availability Zone 1
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.2.18.0/24
    Description: CIDR block for private subnet 2 located in Availability Zone 2
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.2.20.0/24
    Description: CIDR block for the public (DMZ) subnet 1 located in Availability
      Zone 1
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.2.22.0/24
    Description: CIDR block for the public (DMZ) subnet 2 located in Availability
      Zone 2
    Type: String
  BastionAMIOS:
    AllowedValues:
      - Amazon-Linux2-HVM
      - CentOS-7-HVM
      - Ubuntu-Server-20.04-LTS-HVM
      - SUSE-SLES-15-HVM
    Default: Amazon-Linux2-HVM
    Description: The Linux distribution for the AMI to be used for the bastion instances
    Type: String
  BastionInstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: t3.micro
    Description: Amazon EC2 instance type for the bastion instances
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: Allowed CIDR block for external SSH access to the bastions
    Type: String
  KeyPairName:
    Description: >-
      Name of an existing Amazon EC2 public/private key pair to enable remote
      access to instances.
    Type: 'AWS::EC2::KeyPair::KeyName'
  BaseAmiImageName:
    Description: >-
      SSM Parameter Name of the Base Image Id. Supported OS are AL2 & RHEL7.
      Default OS is AL2.
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    Type: AWS::SSM::Parameter::Name
  AuthorInstanceType:
    AllowedValues:
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
    Default: m5.2xlarge
    Description: Amazon EC2 instance type for the AEM Author instance
    Type: String
  PublishInstanceType:
    AllowedValues:
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
    Default: m5.2xlarge
    Description: Amazon EC2 instance type for the AEM Publish instance
    Type: String
  AuthorDispatcherInstanceType:
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
    Default: t3.small
    Description: Amazon EC2 instance type for the AEM Author-Dispatcher instance
    Type: String
  PublishDispatcherInstanceType:
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
    Default: t3.small
    Description: Amazon EC2 instance type for the AEM Publish-Dispatcher instance
    Type: String
  OrchestratorInstanceType:
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
    Default: t3.small
    Description: Amazon EC2 instance type for the Orchestrator instance
    Type: String
  S3DataBucketName:
    Description: >-
      (Optional) S3 bucket name for the AEM OpenCloud Stack data assets(installation files, license file, etc.). This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
    Default: ''
  S3InstallBucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Installation bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Description: >-
      S3 bucket name for the AEM OpenCloud installation assets(installation files, license file, etc.). This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  S3InstallKeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: >-
      AEM OpenCloud installation key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/). It cannot start or end with forward
      slash (/) because they are automatically appended.
    Description: >-
      S3 key prefix for the AEM OpenCloud installation assets(installation files, license file, etc.).AWS Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and forward
      slash (/). It cannot start or end with forward slash (/) because they are automatically
      appended.
    Type: String
    Default: 'quickstart-aem-opencloud/library/'
  AOCStackPrefix:
    AllowedPattern: '[a-zA-Z0-9\-]*'
    ConstraintDescription: Must start with alphabetical character and must follow the cloudformation stack naming convention
    Default: 'aem-opencloud'
    Description: Stack Prefix used to tag and identify the AEM OpenCloud Stack.
    Type: String
  AemVersion:
    Default: "65-SP4"
    Description: >-
      AEM Version to install.
      Please refer to the deployment guide for other supported versions.
    Type: String
  AemDispatcherVersion:
    Default: '4.3.6'
    Description: AEM Dispatcher version to install.
    Type: String
  JavaJDKVersion:
    Default: '8u251'
    Description: >-
      Java JDK Version to install and run AEM.
      Please refer to the deployment guide for other supported versions.
    Type: String
  LambdaZipsBucketName:
    Description: '(Optional) The name of the S3 bucket where the Lambda zip files should be placed. If you leave this parameter blank, an S3 bucket will be created.'
    Type: String
    Default: ''
  InternalRoute53ZoneName:
    Type: String
    Default: ''
    Description: (Optional) Internal Route53 Zone name. If Left blank, one is generated for you.
      If you want to use your own Route 53 hosted zone, please provide the hosted zone name.
  InternalRoute53ZoneID:
    Type: String
    Default: ''
    Description: (Optional) Internal Route53 Zone id of the provided internal Route53 Zone name.
  InternalCertificateARN:
    Default: ''
    Description: >-
      (Optional) Provide the Amazon Resource Name (ARN) of the private certificate created in Amazon Certificate Manager,
      for the provided Internal Route53 Zone name.
      If not provided, a self-signed certificate will be used for you.
    Type: String
  ExternalFQDN:
    Description: (Optional) External FQDN for the AEM OpenCloud deployment (e.g., aoc.example.com).
      If not provided, no external Route53 Record will be created.
      If provided the External Route53 Zone ID becomes mandatory.
    Type: String
    Default: ''
  ExternalRoute53ZoneID:
    Description: (Conditional) Route53 Hosted Zone ID of the defined ExternalFQDN.
      Mandatory if an External FQDN was provided.
    Default: ''
    Type: String
  ExternalCertificateARN:
    Default: ''
    Description: (Optional) The ARN of the external Certificate stored in AWS Certificate Manager(ACM).
      If not provided, but External FQDN & External Route53 Zone ID were provided, an external wildcard certificate will be created for you.
    Type: String
  AuthorBackupSnapshotID:
    Default: ''
    Description: (Optional) Provide the AWS EC2 Snapshot ID of an AEM Author backup, to recreate a new Environment based on a backup.
    Type: String
  PublishBackupSnapshotID:
    Default: ''
    Description: (Optional) Provide the AWS EC2 Snapshot ID of an AEM Publish backup, to recreate a new Environment based on a backup.
    Type: String
  AlarmNotificationEmail:
    Default: ''
    Description: (Optional) Provode a valid Email address if you want to receive Stack alarm messages.
    Type: String
  AlarmNotificationHttpsEndpoint:
    Default: ''
    Description: (Optional) Provode a valid HTTPS Endpoint address if you want to receive Stack alarm messages.
    Type: String
  EnableCloudfront:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: (Optional) Set to false to disable Cloudfront.
    Type: String
  CloudfrontPriceClass:
    AllowedValues:
      - PriceClass_100
      - PriceClass_200
      - PriceClass_All
    Default: 'PriceClass_All'
    Description: (Optional) Select the price class associated with the maximum price that you
      want to pay for CloudFront service. If you select a price class other than All,
      some of your users may experience higher latency.
    Type: String
    ConstraintDescription: Select a valid CloudFront Price Class.
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: 'aws-quickstart'
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3BucketRegion:
    Default: us-east-1
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: >-
      AWS Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/). It cannot start or end with forward
      slash (/) because they are automatically appended.
    Default: quickstart-aem-opencloud/
    Description: >-
      S3 key prefix for the AWS Quick Start assets.AWS Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and forward
      slash (/). It cannot start or end with forward slash (/) because they are automatically
      appended.
    Type: String
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  CloudFrontEnabled: !Equals [!Ref EnableCloudfront, 'true']
  CreateExternalRoute53DNSRecordCondition: !And
    - !Not
      - !Equals
        - !Ref 'ExternalFQDN'
        - ''
    - !Not
      - !Equals
        - !Ref 'ExternalRoute53ZoneID'
        - ''
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AvailabilityZones: !Join
          - ','
          - !Ref 'AvailabilityZones'
        NumberOfAZs: '2'
        PrivateSubnet1ACIDR: !Ref 'PrivateSubnet1CIDR'
        PrivateSubnet2ACIDR: !Ref 'PrivateSubnet2CIDR'
        PublicSubnet1CIDR: !Ref 'PublicSubnet1CIDR'
        PublicSubnet2CIDR: !Ref 'PublicSubnet2CIDR'
        VPCCIDR: !Ref 'VPCCIDR'
  BastionStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        BastionAMIOS: !Ref 'BastionAMIOS'
        BastionInstanceType: !Ref 'BastionInstanceType'
        KeyPairName: !Ref 'KeyPairName'
        PublicSubnet1ID: !GetAtt 'VPCStack.Outputs.PublicSubnet1ID'
        PublicSubnet2ID: !GetAtt 'VPCStack.Outputs.PublicSubnet2ID'
        QSS3BucketName: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
        QSS3BucketRegion: !Ref 'QSS3BucketRegion'
        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}submodules/quickstart-linux-bastion/'
        RemoteAccessCIDR: !Ref 'RemoteAccessCIDR'
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
  AEMOpenCloudStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/workload.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AvailabilityZones: !Join
          - ','
          - !Ref 'AvailabilityZones'
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
        VPCCIDR: !GetAtt 'VPCStack.Outputs.VPCCIDR'
        PrivateSubnet1ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
        PrivateSubnet2ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
        PublicSubnet1ID: !GetAtt 'VPCStack.Outputs.PublicSubnet1ID'
        PublicSubnet2ID: !GetAtt 'VPCStack.Outputs.PublicSubnet2ID'
        PrivateSubnet1RouteTableID: !GetAtt 'VPCStack.Outputs.PrivateSubnet1ARouteTable'
        PrivateSubnet2RouteTableID: !GetAtt 'VPCStack.Outputs.PrivateSubnet2ARouteTable'
        PublicSubnetRouteTableID: !GetAtt 'VPCStack.Outputs.PublicSubnetRouteTable'
        KeyPairName: !Ref KeyPairName
        BaseAmiImageName: !Ref BaseAmiImageName
        AuthorInstanceType: !Ref AuthorInstanceType
        PublishInstanceType: !Ref PublishInstanceType
        AuthorDispatcherInstanceType: !Ref AuthorDispatcherInstanceType
        PublishDispatcherInstanceType: !Ref PublishDispatcherInstanceType
        OrchestratorInstanceType: !Ref OrchestratorInstanceType
        S3DataBucketName: !Ref S3DataBucketName
        S3InstallBucketName: !Ref S3InstallBucketName
        S3InstallKeyPrefix: !Ref S3InstallKeyPrefix
        AOCStackPrefix: !Ref AOCStackPrefix
        AemVersion: !Ref AemVersion
        AemDispatcherVersion: !Ref AemDispatcherVersion
        JavaJDKVersion: !Ref JavaJDKVersion
        LambdaZipsBucketName: !Ref LambdaZipsBucketName
        InternalRoute53ZoneName: !Ref InternalRoute53ZoneName
        InternalRoute53ZoneID: !Ref InternalRoute53ZoneID
        InternalCertificateARN: !Ref InternalCertificateARN
        ExternalFQDN: !Ref ExternalFQDN
        ExternalRoute53ZoneID: !Ref ExternalRoute53ZoneID
        ExternalCertificateARN: !Ref ExternalCertificateARN
        AuthorBackupSnapshotID: !Ref AuthorBackupSnapshotID
        PublishBackupSnapshotID: !Ref PublishBackupSnapshotID
        AlarmNotificationEmail: !Ref AlarmNotificationEmail
        AlarmNotificationHttpsEndpoint: !Ref AlarmNotificationHttpsEndpoint
        EnableCloudfront: !Ref EnableCloudfront
        CloudfrontPriceClass: !Ref CloudfrontPriceClass
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
Outputs:
  AuthorDispatcherInternalDNSRecord:
    Description: The Route53 record of the Author-Dispatcher ELB
    Value: !GetAtt 'AEMOpenCloudStack.Outputs.AuthorDispatcherInternalDNSRecord'
  PublishDispatcherInternalDNSRecord:
    Description: The Route53 record of the Publish-Dispatcher ELB
    Value: !GetAtt 'AEMOpenCloudStack.Outputs.PublishDispatcherInternalDNSRecord'
  CloudfrontURL:
    Condition: CloudFrontEnabled
    Description: Cloudfront Distribution URL
    Value: !GetAtt 'AEMOpenCloudStack.Outputs.CloudfrontURL'
  ExternalDNSRecord:
    Condition: CreateExternalRoute53DNSRecordCondition
    Description: External URL
    Value: !GetAtt 'AEMOpenCloudStack.Outputs.ExternalDNSRecord'
