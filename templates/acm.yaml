AWSTemplateFormatVersion: '2010-09-09'
Description: Create external certificate in AWS ACM (qs-1r4pm2nte)
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Tooling Stack"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: AEM OpenCloud configuration
        Parameters:
          - AOCStackPrefix
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - LambdaZipsBucketName
          - QSS3KeyPrefix
    ParameterLabels:
      AOCStackPrefix:
        default: AEM OpenCloud Stack Prefix
      LambdaZipsBucketName:
        default: Lambda Zips Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
Parameters:
  AOCStackPrefix:
    AllowedPattern: '[a-zA-Z0-9\-]*'
    ConstraintDescription: Must start with alphabetical character and must follow the cloudformation stack naming convention
    Default: 'aem-opencloud'
    Description: Stack Prefix used to tag and identify the AEM OpenCloud Stack.
    Type: String
  LambdaZipsBucketName:
    Description: Bucket Name where the lambda zip files should be placed
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: >-
      AWS Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/). It cannot start or end with forward
      slash (/) because they are automatically appended.
    Default: quickstart-aem-opencloud/
    Description: >-
      S3 key prefix for the AWS Quick Start assets.AWS Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and forward
      slash (/). It cannot start or end with forward slash (/) because they are automatically
      appended.
    Type: String
Resources:
  ACMExternalCertificateRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
        - PolicyName: lambda-acm
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - acm:RequestCertificate
                  - acm:DescribeCertificate
                  - acm:DeleteCertificate
                Resource: !Sub "arn:${AWS::Partition}:acm:${AWS::Region}:${AWS::AccountId}:certificate/* "
              - Effect: Allow
                Action:
                  - route53:ChangeResourceRecordSets
                Resource:
                  - Fn::Join:
                      - "/"
                      - - !Sub "arn:${AWS::Partition}:route53:::hostedzone"
                        - !Sub "{{resolve:ssm:/${AOCStackPrefix}/r53/external/zoneid:1}}"
              - Effect: Allow
                Action:
                  - logs:FilterLogEvents
                Resource: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*"
  ACMExternalCertificateLambda:
    Type: AWS::Lambda::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W58
          reason: "Skip IAM permission check forLambda functions require permission to write CloudWatch Logs"
    Properties:
      Description: Creates and verifies an ACM certificate using DNS validation and route53
      Handler: lambda_function.handler
      Runtime: python2.7
      Role:
        Fn::GetAtt:
          - ACMExternalCertificateRole
          - Arn
      Timeout: 900
      Code:
        S3Bucket:
          Ref: LambdaZipsBucketName
        S3Key:
          Fn::Sub: "${QSS3KeyPrefix}functions/packages/ACMCert/lambda.zip"
  ACMExternalCertificate:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - ACMExternalCertificateLambda
          - Arn
      HostedZoneId: !Sub "{{resolve:ssm:/${AOCStackPrefix}/r53/external/zoneid:1}}"
      HostNames:
        - !Sub "{{resolve:ssm:/${AOCStackPrefix}/r53/external/fqdn:1}}"
        - Fn::Join:
            - ""
            - - "*."
              - !Sub "{{resolve:ssm:/${AOCStackPrefix}/r53/external/fqdn:1}}"
  ACMExternalCertificateArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AOCStackPrefix}/cert/external
      Description: Parameter for the created external certificate
      Type: String
      Value:
        Fn::GetAtt:
          - ACMExternalCertificate
          - Arn
Outputs:
  oACMExternalCertificateARN:
    Description: External Certificate ARN
    Value: !GetAtt ACMExternalCertificateArnParameter.Value
